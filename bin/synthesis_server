#!/usr/bin/env python 
#
# Cloudlet Infrastructure for Mobile Computing
#
#   Author: Kiryong Ha <krha@cmu.edu>
#
#   Copyright (C) 2011-2013 Carnegie Mellon University
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
import os
import sys
import signal

if os.path.exists("../elijah") is True:
    sys.path.insert(0, "../")
from elijah.provisioning.server import SynthesisServer
from elijah.provisioning.synthesis import validate_congifuration


def sigint_handler(signum, frame):
    sys.stdout.write("Exit by user\n")
    if server != None:
        server.terminate()
    sys.exit(0)


if not validate_congifuration():
    sys.stderr.write("failed to validate configuration\n")
    sys.exit(1)

# handling keyboard interrupt
#signal.signal(signal.SIGINT, sigint_handler)

server = SynthesisServer(sys.argv[1:])
try:
    server.serve_forever()
except Exception as e:
    #sys.stderr.write(str(e))
    server.terminate()
    sys.exit(1)
except KeyboardInterrupt as e:
    sys.stdout.write("Exit by user\n")
    server.terminate()
    sys.exit(1)
else:
    server.terminate()
    sys.exit(0)


